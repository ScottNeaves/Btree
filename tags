!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AllocateNode	btree.cc	/^ERROR_T BTreeIndex::AllocateNode(SIZE_T &n)$/;"	f	class:BTreeIndex
Attach	btree.cc	/^ERROR_T BTreeIndex::Attach(const SIZE_T initblock, const bool create)$/;"	f	class:BTreeIndex
Attach	buffercache.cc	/^ERROR_T BufferCache::Attach()$/;"	f	class:BufferCache
BTreeIndex	btree.cc	/^BTreeIndex::BTreeIndex()$/;"	f	class:BTreeIndex
BTreeIndex	btree.cc	/^BTreeIndex::BTreeIndex(SIZE_T keysize, $/;"	f	class:BTreeIndex
BTreeIndex	btree.cc	/^BTreeIndex::BTreeIndex(const BTreeIndex &rhs)$/;"	f	class:BTreeIndex
BTreeNode	btree_ds.cc	/^BTreeNode::BTreeNode() $/;"	f	class:BTreeNode
BTreeNode	btree_ds.cc	/^BTreeNode::BTreeNode(const BTreeNode &rhs) $/;"	f	class:BTreeNode
BTreeNode	btree_ds.cc	/^BTreeNode::BTreeNode(int node_type, SIZE_T key_size, SIZE_T value_size, SIZE_T block_size)$/;"	f	class:BTreeNode
Block	block.cc	/^Block::Block() : data(0), length(0), lastaccessed(-1), dirty(false)$/;"	f	class:Block
Block	block.cc	/^Block::Block(const Block &rhs) : data(0), length(0), lastaccessed(rhs.lastaccessed), dirty(rhs.dirty)$/;"	f	class:Block
Block	block.cc	/^Block::Block(const SIZE_T s) : data(0), length(0), lastaccessed(-1), dirty(false)$/;"	f	class:Block
Block	block.cc	/^Block::Block(const char * str) : data(0), length(0), lastaccessed(-1), dirty(false)$/;"	f	class:Block
BufferCache	buffercache.cc	/^BufferCache::BufferCache(DiskSystem *d,$/;"	f	class:BufferCache
CLEARBIT	disksystem.cc	522;"	d	file:
CheckDeleteOldest	buffercache.cc	/^ERROR_T BufferCache::CheckDeleteOldest()$/;"	f	class:BufferCache
DeallocateNode	btree.cc	/^ERROR_T BTreeIndex::DeallocateNode(const SIZE_T &n)$/;"	f	class:BTreeIndex
Delete	btree.cc	/^ERROR_T BTreeIndex::Delete(const KEY_T &key)$/;"	f	class:BTreeIndex
Detach	btree.cc	/^ERROR_T BTreeIndex::Detach(SIZE_T &initblock)$/;"	f	class:BTreeIndex
Detach	buffercache.cc	/^ERROR_T BufferCache::Detach()$/;"	f	class:BufferCache
DiskSystem	disksystem.cc	/^DiskSystem::DiskSystem(const string &filestem,$/;"	f	class:DiskSystem
Display	btree.cc	/^ERROR_T BTreeIndex::Display(ostream &o, BTreeDisplayType display_type) const$/;"	f	class:BTreeIndex
DisplayInternal	btree.cc	/^ERROR_T BTreeIndex::DisplayInternal(const SIZE_T &node,$/;"	f	class:BTreeIndex
FlushBlock	buffercache.cc	/^ERROR_T BufferCache::FlushBlock(const SIZE_T blocknum)$/;"	f	class:BufferCache
GETBIT	disksystem.cc	520;"	d	file:
GETNEXTVAL	disksystem.cc	171;"	d	file:
GetBlockSize	buffercache.cc	/^SIZE_T BufferCache::GetBlockSize() const$/;"	f	class:BufferCache
GetBlockSize	disksystem.cc	/^SIZE_T DiskSystem::GetBlockSize() const$/;"	f	class:DiskSystem
GetCacheSize	buffercache.cc	/^SIZE_T BufferCache::GetCacheSize() const$/;"	f	class:BufferCache
GetCurrentTime	buffercache.cc	/^double BufferCache::GetCurrentTime() const$/;"	f	class:BufferCache
GetKey	btree_ds.cc	/^ERROR_T BTreeNode::GetKey(const SIZE_T offset, KEY_T &k) const$/;"	f	class:BTreeNode
GetKeyVal	btree_ds.cc	/^ERROR_T BTreeNode::GetKeyVal(const SIZE_T offset, KeyValuePair &p) const$/;"	f	class:BTreeNode
GetNumBlocks	buffercache.cc	/^SIZE_T BufferCache::GetNumBlocks() const$/;"	f	class:BufferCache
GetNumBlocks	disksystem.cc	/^SIZE_T DiskSystem::GetNumBlocks() const$/;"	f	class:DiskSystem
GetNumDataBytes	btree_ds.cc	/^SIZE_T NodeMetadata::GetNumDataBytes() const$/;"	f	class:NodeMetadata
GetNumSlotsAsInterior	btree_ds.cc	/^SIZE_T NodeMetadata::GetNumSlotsAsInterior() const$/;"	f	class:NodeMetadata
GetNumSlotsAsLeaf	btree_ds.cc	/^SIZE_T NodeMetadata::GetNumSlotsAsLeaf() const$/;"	f	class:NodeMetadata
GetPtr	btree_ds.cc	/^ERROR_T BTreeNode::GetPtr(const SIZE_T offset, SIZE_T &ptr) const$/;"	f	class:BTreeNode
GetVal	btree_ds.cc	/^ERROR_T BTreeNode::GetVal(const SIZE_T offset, VALUE_T &v) const$/;"	f	class:BTreeNode
InitFromConfigFile	disksystem.cc	/^ERROR_T DiskSystem::InitFromConfigFile()$/;"	f	class:DiskSystem
InitFromInMemoryConfig	disksystem.cc	/^ERROR_T DiskSystem::InitFromInMemoryConfig()$/;"	f	class:DiskSystem
Insert	btree.cc	/^ERROR_T BTreeIndex::Insert(const KEY_T &key, const VALUE_T &value)$/;"	f	class:BTreeIndex
IsBlockAllocated	buffercache.cc	/^bool  BufferCache::IsBlockAllocated(const SIZE_T inblocknum)$/;"	f	class:BufferCache
IsBlockAllocated	disksystem.cc	/^bool DiskSystem::IsBlockAllocated(const SIZE_T block)$/;"	f	class:DiskSystem
KeyValuePair	btree.cc	/^KeyValuePair::KeyValuePair()$/;"	f	class:KeyValuePair
KeyValuePair	btree.cc	/^KeyValuePair::KeyValuePair(const KEY_T &k, const VALUE_T &v) : $/;"	f	class:KeyValuePair
KeyValuePair	btree.cc	/^KeyValuePair::KeyValuePair(const KeyValuePair &rhs) :$/;"	f	class:KeyValuePair
Lookup	btree.cc	/^ERROR_T BTreeIndex::Lookup(const KEY_T &key, VALUE_T &value)$/;"	f	class:BTreeIndex
LookupOrUpdateInternal	btree.cc	/^ERROR_T BTreeIndex::LookupOrUpdateInternal(const SIZE_T &node,$/;"	f	class:BTreeIndex
MAX	block.cc	89;"	d	file:
MIN	block.cc	47;"	d	file:
ModelAccess	disksystem.cc	/^double DiskSystem::ModelAccess(const SIZE_T offblock, const SIZE_T numblock) $/;"	f	class:DiskSystem
NotifyAllocateBlock	buffercache.cc	/^ERROR_T BufferCache::NotifyAllocateBlock(const SIZE_T outblocknum)$/;"	f	class:BufferCache
NotifyAllocateBlocks	disksystem.cc	/^ERROR_T DiskSystem::NotifyAllocateBlocks(const SIZE_T offset, const SIZE_T innumblocks)$/;"	f	class:DiskSystem
NotifyDeallocateBlock	buffercache.cc	/^ERROR_T BufferCache::NotifyDeallocateBlock(const SIZE_T inblocknum)$/;"	f	class:BufferCache
NotifyDeallocateBlocks	disksystem.cc	/^ERROR_T DiskSystem::NotifyDeallocateBlocks(const SIZE_T offset,const SIZE_T innumblocks)$/;"	f	class:DiskSystem
PARSEDOUBLE	disksystem.cc	173;"	d	file:
PARSEUNSIGNED	disksystem.cc	172;"	d	file:
PrefetchBlock	buffercache.cc	/^ERROR_T BufferCache::PrefetchBlock (const SIZE_T blocknum)$/;"	f	class:BufferCache
Print	block.cc	/^ostream & Block::Print(ostream &os) const$/;"	f	class:Block
Print	btree.cc	/^ostream & BTreeIndex::Print(ostream &os) const$/;"	f	class:BTreeIndex
Print	btree_ds.cc	/^ostream & BTreeNode::Print(ostream &os) const $/;"	f	class:BTreeNode
Print	btree_ds.cc	/^ostream & NodeMetadata::Print(ostream &os) const $/;"	f	class:NodeMetadata
Print	buffercache.cc	/^ostream & BufferCache::Print(ostream &os) const$/;"	f	class:BufferCache
Print	disksystem.cc	/^ostream & DiskSystem::Print(ostream &os) const$/;"	f	class:DiskSystem
PrintNode	btree.cc	/^static ERROR_T PrintNode(ostream &os, SIZE_T nodenum, BTreeNode &b, BTreeDisplayType dt)$/;"	f	file:
Read	disksystem.cc	/^ERROR_T DiskSystem::Read(const SIZE_T   inoffblock,$/;"	f	class:DiskSystem
Read	disksystem.cc	/^ERROR_T DiskSystem::Read(const SIZE_T inoffblock, Block &blocks, double &reqtime)$/;"	f	class:DiskSystem
ReadBitMap	disksystem.cc	/^ERROR_T DiskSystem::ReadBitMap()$/;"	f	class:DiskSystem
ReadBlock	buffercache.cc	/^ERROR_T BufferCache::ReadBlock(const SIZE_T inblocknum, Block &outblock) $/;"	f	class:BufferCache
ReadConfig	disksystem.cc	/^ERROR_T DiskSystem::ReadConfig()$/;"	f	class:DiskSystem
Resize	block.cc	/^ERROR_T Block::Resize(const SIZE_T newlen, const bool copy)$/;"	f	class:Block
ResolveKey	btree_ds.cc	/^char * BTreeNode::ResolveKey(const SIZE_T offset) const$/;"	f	class:BTreeNode
ResolveKeyVal	btree_ds.cc	/^char * BTreeNode::ResolveKeyVal(const SIZE_T offset) const$/;"	f	class:BTreeNode
ResolvePtr	btree_ds.cc	/^char * BTreeNode::ResolvePtr(const SIZE_T offset) const$/;"	f	class:BTreeNode
ResolveVal	btree_ds.cc	/^char * BTreeNode::ResolveVal(const SIZE_T offset) const$/;"	f	class:BTreeNode
SETBIT	disksystem.cc	521;"	d	file:
SanityCheck	btree.cc	/^ERROR_T BTreeIndex::SanityCheck() const$/;"	f	class:BTreeIndex
SanityCheckConfig	disksystem.cc	/^ERROR_T DiskSystem::SanityCheckConfig()$/;"	f	class:DiskSystem
Serialize	btree_ds.cc	/^ERROR_T BTreeNode::Serialize(BufferCache *b, const SIZE_T blocknum) const$/;"	f	class:BTreeNode
SetKey	btree_ds.cc	/^ERROR_T BTreeNode::SetKey(const SIZE_T offset, const KEY_T &k)$/;"	f	class:BTreeNode
SetKeyVal	btree_ds.cc	/^ERROR_T BTreeNode::SetKeyVal(const SIZE_T offset, const KeyValuePair &p)$/;"	f	class:BTreeNode
SetPtr	btree_ds.cc	/^ERROR_T BTreeNode::SetPtr(const SIZE_T offset, const SIZE_T &ptr)$/;"	f	class:BTreeNode
SetVal	btree_ds.cc	/^ERROR_T BTreeNode::SetVal(const SIZE_T offset, const VALUE_T &v)$/;"	f	class:BTreeNode
Unserialize	btree_ds.cc	/^ERROR_T  BTreeNode::Unserialize(BufferCache *b, const SIZE_T blocknum)$/;"	f	class:BTreeNode
Update	btree.cc	/^ERROR_T BTreeIndex::Update(const KEY_T &key, const VALUE_T &value)$/;"	f	class:BTreeIndex
Write	disksystem.cc	/^ERROR_T DiskSystem::Write(const SIZE_T   inoffblock,$/;"	f	class:DiskSystem
Write	disksystem.cc	/^ERROR_T DiskSystem::Write(const SIZE_T inoffblock, const Block &blocks, double &reqtime)$/;"	f	class:DiskSystem
WriteBitMap	disksystem.cc	/^ERROR_T DiskSystem::WriteBitMap()$/;"	f	class:DiskSystem
WriteBlock	buffercache.cc	/^ERROR_T BufferCache::WriteBlock(const SIZE_T inblocknum, const Block &inblock)$/;"	f	class:BufferCache
WriteConfig	disksystem.cc	/^ERROR_T DiskSystem::WriteConfig()$/;"	f	class:DiskSystem
high2hex	block.cc	/^static char high2hex(BYTE_T x)$/;"	f	file:
low2hex	block.cc	/^static char low2hex(BYTE_T x)$/;"	f	file:
main	btree_delete.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_display.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_init.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_insert.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_lookup.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_sane.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_show.cc	/^int main(int argc, char **argv)$/;"	f
main	btree_update.cc	/^int main(int argc, char **argv)$/;"	f
main	deletedisk.cc	/^int main(int argc, char *argv[])$/;"	f
main	freebuffer.cc	/^int main(int argc, char *argv[])$/;"	f
main	infodisk.cc	/^int main(int argc, char *argv[])$/;"	f
main	makedisk.cc	/^int main(int argc, char *argv[])$/;"	f
main	readbuffer.cc	/^int main(int argc, char *argv[])$/;"	f
main	readdisk.cc	/^int main(int argc, char *argv[])$/;"	f
main	sim.cc	/^int main(int argc, char *argv[])$/;"	f
main	writebuffer.cc	/^int main(int argc, char *argv[])$/;"	f
main	writedisk.cc	/^int main(int argc, char *argv[])$/;"	f
myread	disksystem.cc	/^static SIZE_T myread(FILE *f, const SIZE_T off, BYTE_T *buf, const int len, bool trunconeof=true)$/;"	f	file:
mywrite	disksystem.cc	/^static SIZE_T mywrite(FILE *f, const SIZE_T off, const BYTE_T *buf, const int len)$/;"	f	file:
operator <	block.cc	/^bool Block::operator<(const Block &rhs) const$/;"	f	class:Block
operator =	block.cc	/^Block & Block::operator=(const Block &rhs)$/;"	f	class:Block
operator =	btree.cc	/^BTreeIndex & BTreeIndex::operator=(const BTreeIndex &rhs)$/;"	f	class:BTreeIndex
operator =	btree.cc	/^KeyValuePair & KeyValuePair::operator=(const KeyValuePair &rhs)$/;"	f	class:KeyValuePair
operator =	btree_ds.cc	/^BTreeNode & BTreeNode::operator=(const BTreeNode &rhs) $/;"	f	class:BTreeNode
operator ==	block.cc	/^bool Block::operator==(const Block &rhs) const$/;"	f	class:Block
usage	btree_delete.cc	/^void usage() $/;"	f
usage	btree_display.cc	/^void usage() $/;"	f
usage	btree_init.cc	/^void usage() $/;"	f
usage	btree_insert.cc	/^void usage() $/;"	f
usage	btree_lookup.cc	/^void usage() $/;"	f
usage	btree_sane.cc	/^void usage() $/;"	f
usage	btree_show.cc	/^void usage() $/;"	f
usage	btree_update.cc	/^void usage() $/;"	f
usage	deletedisk.cc	/^void usage() $/;"	f
usage	freebuffer.cc	/^void usage() $/;"	f
usage	infodisk.cc	/^void usage() $/;"	f
usage	makedisk.cc	/^void usage() $/;"	f
usage	readbuffer.cc	/^void usage() $/;"	f
usage	readdisk.cc	/^void usage() $/;"	f
usage	sim.cc	/^void usage()$/;"	f
usage	writebuffer.cc	/^void usage() $/;"	f
usage	writedisk.cc	/^void usage() $/;"	f
~BTreeIndex	btree.cc	/^BTreeIndex::~BTreeIndex()$/;"	f	class:BTreeIndex
~BTreeNode	btree_ds.cc	/^BTreeNode::~BTreeNode()$/;"	f	class:BTreeNode
~Block	block.cc	/^Block::~Block() $/;"	f	class:Block
~BufferCache	buffercache.cc	/^BufferCache::~BufferCache()$/;"	f	class:BufferCache
~DiskSystem	disksystem.cc	/^DiskSystem::~DiskSystem()$/;"	f	class:DiskSystem
~KeyValuePair	btree.cc	/^KeyValuePair::~KeyValuePair()$/;"	f	class:KeyValuePair
